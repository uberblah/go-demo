// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/uberblah/go-demo/name-parser (interfaces: NameParser)

package mock_np

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of NameParser interface
type MockNameParser struct {
	ctrl     *gomock.Controller
	recorder *_MockNameParserRecorder
}

// Recorder for MockNameParser (not exported)
type _MockNameParserRecorder struct {
	mock *MockNameParser
}

func NewMockNameParser(ctrl *gomock.Controller) *MockNameParser {
	mock := &MockNameParser{ctrl: ctrl}
	mock.recorder = &_MockNameParserRecorder{mock}
	return mock
}

func (_m *MockNameParser) EXPECT() *_MockNameParserRecorder {
	return _m.recorder
}

func (_m *MockNameParser) GetParts() map[string]string {
	ret := _m.ctrl.Call(_m, "GetParts")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

func (_mr *_MockNameParserRecorder) GetParts() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetParts")
}

func (_m *MockNameParser) ParseFrom(_param0 string) error {
	ret := _m.ctrl.Call(_m, "ParseFrom", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNameParserRecorder) ParseFrom(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ParseFrom", arg0)
}
